version: '3.2'
services:

  #PHP Service
  app:
    image: ${APP_SERVICE_TAG}
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: php
      SERVICE_TAGS: ${APP_ENV}
    working_dir: /var/www
    expose:
      - 9000
    volumes:
       - ./:/var/www
       - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - backend

  #Nginx Service
  webserver:
   image: nginx:alpine
   container_name: webserver
   restart: unless-stopped
   tty: true
   ports:
     - "80:80"
     - "443:443"
   volumes:
     - ./:/var/www
     - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
   networks:
     - frontend
     - backend

  #Apache Service
  # webserver:
  #   build:
  #     context: ./docker/apache/
  #     args:
  #       APACHE_VERSION: ${APACHE_VERSION}
  #   depends_on:
  #     - app
  #     - db
  #   container_name: webserver
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./:/var/www
  #   networks:
  #     - frontend
  #     - backend

  #MySQL Service
  db:
    #image: mysql:5.7.22
    image: mariadb:${MARIADB_VERSION}
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_NAME: mariadb
      SERVICE_TAGS: ${APP_ENV}
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - backend

  #Redis - caching and / or session
  #redis:
  #  image: redis
  #  networks:
  #    - backend

#Docker Networks
networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local